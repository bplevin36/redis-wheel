name: manylinux

on:
 push:

jobs:
 
 checkout:
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v2
    - name: Upload checkout
      uses: actions/upload-artifact@v1
      with:
        name: checkout
        path: .

 build:
  needs: checkout
  runs-on: ubuntu-latest
  strategy:
    matrix:
      image:
        - "quay.io/pypa/manylinux1_x86_64"
        - "quay.io/pypa/manylinux1_i686"
      redis_version:
        - "5.0.7"
        - "5.0.6"
      python_abi:
        - "cp34-cp34m"
        - "cp35-cp35m"
        - "cp36-cp36m"
        - "cp37-cp37m"
        - "cp38-cp38"
  container:
    image: ${{ matrix.image }}
  steps:
    - name: Download checkout
      uses: actions/download-artifact@v1
      with:
        name: checkout
        path: .

    - name: Fix +x permission
      run: find tools/ -type f -iname "*.sh" -exec chmod +x {} \;

    - name: Setup python/pip/poetry
      run: |
        rm -f /usr/bin/python
        update-alternatives --install /usr/bin/python python /opt/python/${{ matrix.python_abi }}/bin/python 0
        python --version

        rm -f /usr/bin/pip
        update-alternatives --install /usr/bin/pip pip /opt/python/${{ matrix.python_abi }}/bin/pip 0
        pip install -U pip
        pip --version
        
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
        update-alternatives --install /usr/bin/poetry poetry $HOME/.poetry/bin/poetry 0
        poetry --version
        poetry config virtualenvs.create false

    - name: Build redis
      run: tools/build.sh ${{ matrix.redis_version }} redis_server/bin

    - name: Build distribution
      run: tools/distrib.sh $(pwd) ${{ matrix.redis_version }} $(echo ${{ matrix.image }} | awk -F'/' '{print $(NF)}')
